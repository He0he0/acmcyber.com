@use "sass:math";

.welcomeHero {
  --welcome-hero-height: calc(100vh - 80px);
  --diamond-border-width: 12px;
  --diamond-border-part-width: calc(var(--diamond-border-width) * 2);
  --diamond-scale: 0.65;
  --diamond-length: calc(
    var(--diamond-scale) * max(min(100vw, var(--welcome-hero-height)), 800px)
  );
  --diamond-x: calc((100vw - var(--diamond-length)) / 2);
  --diamond-y: calc((var(--welcome-hero-height) - var(--diamond-length)) / 2);
  --diamond-center-y: calc(var(--diamond-y) + var(--diamond-length) * 0.454);

  height: max(var(--welcome-hero-height), 28rem);
  overflow: hidden;
  background: var(--soul-dark);

  .cyberDiamondRelativeContainer {
    position: relative;

    .collage {
      position: absolute;
      width: 100%;
      height: max(var(--welcome-hero-height), 28rem);
      background: url("/images/collage.png") no-repeat center / cover;
    }

    .cyberDiamond {
      position: absolute;
      width: var(--diamond-length);
      height: var(--diamond-length);
      transform: translate(var(--diamond-x), max(var(--diamond-y), -3rem))
        rotate(45deg);
      border: none;
      border-radius: 40px;
      background: radial-gradient(#ffba4400, #ffba4414) center;
      background-color: #000c;

      &::before {
        content: "";
        position: absolute;
        inset: 0;
        padding: var(--diamond-border-width);
        border-radius: 40px;
        // init, right, bottom, left, top
        // prettier-ignore
        background: linear-gradient(var(--cyber-gold) 0 0) no-repeat 0% 0% / var(--diamond-border-part-width) 20%,
          linear-gradient(var(--cyber-gold) 0 0) no-repeat 0% 0% / 100% var(--diamond-border-part-width),
          linear-gradient(var(--cyber-gold) 0 0) no-repeat 100% 0% / var(--diamond-border-part-width) 100%,
          linear-gradient(var(--cyber-gold) 0 0) no-repeat 100% 100% / 100% var(--diamond-border-part-width),
          linear-gradient(var(--cyber-gold) 0 0) no-repeat 0% 100% / var(--diamond-border-part-width) 80%;
        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
        mask-composite: exclude;
      }
    }
  }

  .cyberDiamondInner {
    position: relative;
    text-align: center;

    .textWrap {
      position: absolute;
      width: 100vw;

      .welcomeTo {
        margin: auto;
        width: 100vw;
        padding-top: 2rem;
        transform: translateY(max(calc(var(--diamond-center-y) - 10rem), 2rem));
        font-family: "Poppins";
        font-size: min(calc(0.15 * min(var(--diamond-length), 90vw)), 24pt);
        overflow: hidden;
        text-overflow: clip;
        white-space: nowrap;
        color: white;
      }

      .acmCyber1 {
        display: block;
        margin: auto;
        width: 100vw;
        transform: translate(
          -0.2em,
          max(calc(var(--diamond-center-y) - 4rem), 8rem)
        );
        font-size: min(calc(0.1 * min(var(--diamond-length), 90vw)), 40pt);
        overflow: hidden;
        text-overflow: clip;
        white-space: nowrap;

        & > span::after {
          content: "!";
        }
      }

      .elevatorPitch {
        margin: auto;
        max-width: calc(0.6 * var(--diamond-length));
        transform: translateY(max(calc(var(--diamond-center-y) + 5rem), 17rem));
        font-size: min(calc(0.12 * min(var(--diamond-length), 90vw)), 15pt);
        color: white;
      }
    }
  }
}

.motto {
  font-family: "Open Sans", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  text-align: center;

  b {
    font-weight: inherit;
    font-style: normal;
  }

  em {
    font-weight: inherit;
    font-style: oblique;
  }
}

p.motto {
  font-weight: bold;
  font-size: 15pt;
  margin-bottom: 1rem;
}

h1.motto {
  font-family: "Open Sans", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-size: 24pt;
  margin-bottom: 5rem;
}

.comeToTheDarkSide {
  width: 100vw;
  padding: 6rem 10%;

  .cyberThings {
    max-width: 800px;
    margin: 0 auto;

    > a {
      pointer-events: none;

      .cyberThing {
        --cyber-thing-width: 0.09;
        --inner-padding: 0.2;
        position: relative;
        width: calc(100% * (1 - var(--cyber-thing-width)));
        min-height: 11rem;
        height: fit-content;
        margin: 50px 0rem;
        border: 4px solid var(--cyber-gold);
        border-radius: 40px;
        background: linear-gradient(
          #ffba4405 0%,
          #ffba4400 50%,
          #ffba4405 100%
        );
        pointer-events: all;

        &:hover {
          background: linear-gradient(
            #ffba4414 0%,
            #ffba4400 50%,
            #ffba4414 100%
          );
        }

        .cyberThingIcon {
          --border-width: 4px;
          --extra-size: 2.75;
          --size: calc(11rem / 1.41 + var(--border-width) * var(--extra-size));
          --rot-offset: calc(var(--size) * 0.41);
          position: absolute;
          background: var(--cyber-gold);
          width: var(--size);
          height: var(--size);
          --parent-parent-width: min(80vw, 800px);
          --parent-width: var(--parent-parent-width) *
            (1 - var(--cyber-thing-width));
          transform-style: preserve-3d;
          // prettier-ignore
          transform: translate(
            calc(
              var(--left) * calc(var(--parent-parent-width) * -1 * var(--inner-padding)) +
              var(--right) * calc(var(--parent-width) - var(--border-width) * 2.5 - var(--size)) +
              var(--dir) * (0.5 * var(--size) - 28px)
            ),
            calc(
              -1 * (var(--border-width) +
              (-1 * var(--rot-offset) + var(--border-width) * var(--extra-size) * 1.41) / 2)
            )
          ) rotate(45deg);
          border: var(--border-width) solid var(--cyber-gold);
          border-radius: 20px;

          display: flex;
          justify-content: center;
          align-content: center;
          flex-direction: column;

          &::before {
            content: "";
            --offset: 12px;
            position: absolute;
            width: calc(11rem / 1.41);
            height: calc(11rem / 1.41);
            // prettier-ignore
            transform: translate(
                calc(var(--dir) * var(--offset) - var(--left) * var(--border-width)),
                calc(-1 * (var(--dir) * var(--offset) + var(--right) * var(--border-width)))
              )
              translateZ(-10px);
            background: #86652d;
            border: var(--border-width) solid #86652d;
            border-radius: 20px;
          }

          p,
          img {
            transform: translateZ(1px) rotate(-45deg);
            user-select: none;
            pointer-events: none;
          }

          p {
            padding-bottom: 8%;
            text-align: center;
            font-weight: 800;
            font-size: calc(0.35 * var(--size));
            transition: font-size 100ms linear, padding-bottom 100ms linear;
          }

          img {
            margin: auto;
            object-fit: contain;
            width: calc(0.75 * var(--size));
            height: calc(0.75 * var(--size));
            transition: width 100ms linear, height 100ms linear;
          }
        }

        &:hover .cyberThingIcon {
          p {
            font-size: calc(0.4 * var(--size));
            padding-bottom: 12%;
          }
          img {
            width: calc(0.83 * var(--size));
            height: calc(0.83 * var(--size));
          }
        }

        h2 {
          font-family: "Open Sans", "Segoe UI", Tahoma, Geneva, Verdana,
            sans-serif;
        }
      }

      &:nth-child(2n + 1) {
        .cyberThing {
          --dir: -1;
          --left: 1;
          --right: 0;
          margin-left: calc(100% * var(--cyber-thing-width));
          padding-left: calc(100% * var(--inner-padding));
          text-align: left;

          & > p::after {
            content: "→";
            margin-left: 0.5em;
            font-weight: 800;
            color: var(--cyber-gold);
            transition: margin-left 100ms linear;
          }
        }

        &:hover .cyberThing p::after {
          margin-left: 1em;
        }
      }

      &:nth-child(2n) {
        .cyberThing {
          --dir: 1;
          --left: 0;
          --right: 1;
          margin-right: calc(100% * var(--cyber-thing-width));
          padding-right: calc(100% * var(--inner-padding));
          text-align: right;

          & > p::before {
            content: "←";
            margin-right: 0.5em;
            font-weight: 800;
            color: var(--cyber-gold);
            transition: margin-right 100ms linear;
          }
        }

        &:hover .cyberThing p::before {
          margin-right: 1em;
        }
      }

      @media (max-width: 750px) {
        .cyberThing .cyberThingIcon {
          display: none;
        }

        &:nth-child(n) {
          .cyberThing {
            width: 100%;
            margin-left: 0;
            margin-right: 0;
            padding-left: 10%;
            padding-right: 10%;
            padding-bottom: 2rem;
          }
        }
      }
    }
  }
}

.weHaveCookies {
  width: 100vw;
  padding: 0 10% 16rem 10%;

  .socials {
    display: flex;
    justify-content: center;
    align-content: center;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    gap: 40px;

    div {
      width: 60px;
      height: 60px;
      transform: scale(80%);
      object-fit: contain;
      background: var(--cyber-gold);
    }
  }
}

body.firstBoot {
  .welcomeHero {
    .cyberDiamond {
      @keyframes first-boot-diamond {
        0% {
          background: unset;
          background-color: #0000;
        }
        1% {
          background: radial-gradient(#ffba4400, #ffba4414) center;
          background-size: 1813% 1813%;
        }
        100% {
          background-size: 100% 100%;
          background-color: #000c;
        }
      }

      animation: 400ms cubic-bezier(0.14, 0.67, 0.36, 1) 1700ms 1 normal both
        running first-boot-diamond;

      &::before {
        @keyframes first-boot-diamond-before {
          $easing: 0.5;
          #{math.pow(0, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 0%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%;
            background-position-y: 20%, 0%, 0%, 100%, 100%;
          }
          #{math.pow(0.05, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 20%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%;
            background-position-y: 0%, 0%, 0%, 100%, 100%;
          }
          #{math.pow(0.3, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 20%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%;
          }
          #{math.pow(0.55, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 20%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 100%,
              0% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%;
          }
          #{math.pow(0.8, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 20%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 100%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 0%;
          }
          #{math.pow(1, $easing) * 100%} {
            // prettier-ignore
            background-size: var(--diamond-border-part-width) 20%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 100%,
              100% var(--diamond-border-part-width),
              var(--diamond-border-part-width) 80%;
          }
        }

        animation: 1s linear 850ms 1 normal both running
          first-boot-diamond-before;
      }
    }

    .textWrap {
      .welcomeTo {
        @keyframes first-boot-diamond-welcomeTo {
          0% {
            max-width: 0ch;
            opacity: 0%;
          }
          1% {
            max-width: 0ch;
            opacity: 100%;
          }
          20% {
            max-width: 3ch;
          }
          64% {
            max-width: 7.5ch;
          }
          90% {
            max-width: 100%;
            transform: translateY(
              max(calc(var(--diamond-center-y) - 2.5rem), 10rem)
            );
          }
          100% {
            opacity: 100%;
          }
        }

        opacity: 0%;
        animation: 1250ms step-start 1850ms 1 normal both running
          first-boot-diamond-welcomeTo;
      }

      .acmCyber1 > span {
        @keyframes first-boot-diamond-acmCyber1 {
          0% {
            max-width: 0ch;
            opacity: 0%;
          }
          1% {
            max-width: 1ch;
            opacity: 100%;
          }
          18% {
            max-width: 2ch;
          }
          36% {
            max-width: 3.4ch;
          }
          50% {
            max-width: 3.85ch;
          }
          85% {
            max-width: 5.7ch;
          }
          90% {
            max-width: 8.3ch;
          }
          100% {
            max-width: 100%;
            opacity: 100%;
          }
        }

        opacity: 0%;
        background-size: 9.3ch 100%;
        animation: 2200ms step-end 2975ms 1 normal both running
          first-boot-diamond-acmCyber1;
      }
    }

    @keyframes first-boot-diamond-fadeInFinish {
      from {
        opacity: 0%;
      }
      to {
        opacity: 100%;
      }
    }

    .collage,
    .elevatorPitch {
      animation: 600ms ease-in 5500ms 1 normal both running
        first-boot-diamond-fadeInFinish;
    }
  }
}
